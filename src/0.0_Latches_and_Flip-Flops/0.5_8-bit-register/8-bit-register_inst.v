// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.


// Generated by Quartus Prime Version 18.0 (Build Build 614 04/24/2018)
// Created on Sun Dec 20 19:36:59 2020

8-bit-register 8-bit-register_inst
(
	.Clock(Clock_sig) ,	// input  Clock_sig
	.in_0(in_0_sig) ,	// input  in_0_sig
	.in_1(in_1_sig) ,	// input  in_1_sig
	.in_2(in_2_sig) ,	// input  in_2_sig
	.in_3(in_3_sig) ,	// input  in_3_sig
	.in_4(in_4_sig) ,	// input  in_4_sig
	.in_5(in_5_sig) ,	// input  in_5_sig
	.in_6(in_6_sig) ,	// input  in_6_sig
	.in_7(in_7_sig) ,	// input  in_7_sig
	.Enable(Enable_sig) ,	// input  Enable_sig
	.out_0(out_0_sig) ,	// output  out_0_sig
	.out_1(out_1_sig) ,	// output  out_1_sig
	.out_2(out_2_sig) ,	// output  out_2_sig
	.out_3(out_3_sig) ,	// output  out_3_sig
	.out_4(out_4_sig) ,	// output  out_4_sig
	.out_5(out_5_sig) ,	// output  out_5_sig
	.out_6(out_6_sig) ,	// output  out_6_sig
	.out_7(out_7_sig) 	// output  out_7_sig
);

